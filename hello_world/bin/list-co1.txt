
; 64tass Turbo Assembler Macro V1.56.2625 listing file
; 64tass -Wall -Wno-implied-reg --cbm-prg -o hello.prg -L bin/list-co1.txt -l bin/labels.txt hello_world.s
; Sat Dec 10 21:47:21 2022

;Offset	;Hex		;Monitor	;Source

;******  Processing input file: hello_world.s

=$ffd2					PRINT_CHAR = $FFD2 ; kernel sR for outputing chars to screen
=$1e00					SCREEN_RAM = $1E00
>1001	0d 10 0a 00 9e 28 34 31		        .BYTE $0D,$10,$0A,$00,$9E,$28,$34,$31,$31,$31,$29,$00
>1009	31 31 29 00
.100d	00 00		brk #$00		BRK #$00
.100f	4c 20 10	jmp $1020		JMP MAIN
>1012	48 45 4c 4c 4f 20 57 4f		DATA	.BYTE	$48,$45,$4C,$4C,$4F,$20,$57,$4F,$52,$4C,$44,$11,$0D,$00
>101a	52 4c 44 11 0d 00
.1020					MAIN
.1020	20 38 10	jsr $1038		JSR CLR_SCREEN
.1023	a2 00		ldx #$00		LDX #$00	; use X as offset
.1025					LOOP
.1025	8a		txa			TXA
.1026	48		pha			PHA		; push X to stack
.1027	bd 12 10	lda $1012,x		LDA DATA, X	; loads A w/ char
.102a	f0 09		beq $1035		BEQ DONE	; If byte in A is zero, we're done string
.102c	20 d2 ff	jsr $ffd2		JSR PRINT_CHAR
.102f	68		pla			PLA
.1030	aa		tax			TAX		; PUll X off stack
.1031	e8		inx			INX		; increment X (offset into char data)
.1032	4c 25 10	jmp $1025		JMP LOOP
.1035					DONE
.1035	4c 35 10	jmp $1035		JMP DONE	; infinite loop to keep the message on the screen
.1038					CLR_SCREEN
.1038	a2 00		ldx #$00		LDX #$00
.103a					CLR_LP
.103a	a9 00		lda #$00		LDA #$00
.103c	9d 00 1e	sta $1e00,x		STA SCREEN_RAM, X	; splits screen in half to use 8bit counter
.103f	9d 00 1f	sta $1f00,x		STA SCREEN_RAM + $0100, X
.1042	ca		dex			DEX ; see if you can do it with INCREMENT X
.1043	d0 f5		bne $103a		BNE CLR_LP
.1045	60		rts			RTS

;******  End of listing
